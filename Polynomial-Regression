# -*- coding: utf-8 -*-
"""
Created on Thu May 30 15:39:16 2019

@author: aatis
"""

#Importing Libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd 

# importing the dataset
dataset = pd.read_csv('position_salaries.csv')
X = dataset.iloc[:,1:2].values
Y = dataset.iloc[:,2].values

#Fitting Linear Regression to the dataset
from sklearn.linear_model import LinearRegression
linear_regressor = LinearRegression()
linear_regressor.fit(X,Y)

#Fitting Polynomial Regression to the dataset
from sklearn.preprocessing import PolynomialFeatures
polynomial_regressor = PolynomialFeatures(degree = 4) #Default degree = 2
X_poly = polynomial_regressor.fit_transform(X)

linear_regressor2 = LinearRegression()
linear_regressor2.fit(X_poly,Y)

#Visualising the Linear Regression results
plt.scatter(X,Y, color = 'Red')
plt.plot(X, linear_regressor.predict(X), color = 'blue')
plt.title("Linear Regression")
plt.xlabel("Levels")
plt.ylabel("Salaries")
plt.show()

#Visualising the polynomial results
X_grid = np.arange(min(X), max(X), 0.1) # For seeing the polt in 0.1 increment, created variable will be a vector
X_grid = X_grid.reshape((len(X_grid)),1) # For changing the vector to matrix
plt.scatter(X,Y, color = 'red')
plt.plot(X,linear_regressor2.predict(X_poly), color = 'blue') # Traditional method
plt.plot(X_grid, linear_regressor2.predict(polynomial_regressor.fit_transform(X_grid)), color = 'blue')
plt.title("Poly_linear Regression")
plt.xlabel("Levels")
plt.ylabel("Salaries")
plt.show()

#Predicting a new result with Linear Regresion
linear_regressor.predict([[6.5]])


#Predicitng a new result with Polynomial Regression
linear_regressor2.predict(polynomial_regressor.fit_transform([[6.5]]))
