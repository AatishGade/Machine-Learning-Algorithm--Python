# -*- coding: utf-8 -*-
"""
Created on Wed May 29 14:30:53 2019

@author: aatis
"""

#Importing Libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd 

# importing the dataset
dataset = pd.read_csv('50_startups.csv')
X = dataset.iloc[:,:-1].values
Y = dataset.iloc[:,4].values

#Encoding Categorical data
from sklearn.preprocessing import LabelEncoder ,OneHotEncoder
labelencoder_X = LabelEncoder()
X[:, 3]= labelencoder_X.fit_transform(X[:,3])
onehotencoder= OneHotEncoder(categorical_features=[3])
X = onehotencoder.fit_transform(X).toarray()


#Avoiding the dummy variable Trap
X = X[:, 1:]


#Splitting the dataset into Training set and Test Set
from sklearn.model_selection import train_test_split
X_train, X_test , Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, random_state = 0)


#Fitting Multiple Linear Regression to the traning set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,Y_train)

# Predicitng the Test set results
Y_pred = regressor.predict(X_test)

#Building the optimal model using Backward Elimination
import statsmodels.formula.api as sm
X = np.append(arr = np.ones((50, 1)).astype(int), values = X ,axis = 1)
X_opt = X[:, [0, 1, 2, 3, 4, 5]]
regressor_OLS = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_OLS.summary()

X_opt = X[:, [0, 1, 3, 4, 5]]
regressor_OLS = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_OLS.summary()

X_opt = X[:, [0, 3, 4, 5]]
regressor_OLS = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_OLS.summary()

X_opt = X[:, [0, 3, 5]]
regressor_OLS = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_OLS.summary()

#Final Model
X_opt = X[:, [0, 3]]
regressor_OLS = sm.OLS(endog = Y, exog = X_opt).fit()
regressor_OLS.summary()
