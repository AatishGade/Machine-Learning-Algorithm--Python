

# -*- coding: utf-8 -*-
"""
Created on Thu May 30 15:39:16 2019

@author: aatis
"""

#------REGRESSION TEMPLATE--------


#Importing Libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd 

# importing the dataset
dataset = pd.read_csv('position_salaries.csv')
X = dataset.iloc[:,1:2].values
Y = dataset.iloc[:,2].values

#Splitting the dataset into Training set and Test Set
"""from sklearn.model_selection import train_test_split
X_train, X_test , Y_train, Y_test = train_test_split(X,Y, test_size = 1/3, random_state = 0) """


# Feature Scaling if required
"""from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.transform(X_test) """

#Fitting Regression Model  to the dataset
#Create your Regressor here


#Predicitng a new result with Regression Result
Y_pred = regressor.predict(args)


#----- if only needed------
#Visualising the Regression results
plt.scatter(X,Y, color = 'red')
plt.plot(X,regressor.predict(X), color = 'blue') # Traditional method
plt.title("Regression Model")
plt.xlabel("Levels")
plt.ylabel("Salaries")
plt.show()


#Visualising the Regression results(for higher resoultion and smoother curver)
X_grid =np.arange(min(X),max(X),0.1)
X_grid = X_grid.reshape((len(X_grid),1))
plt.scatter(X,Y, color = 'red')
plt.plot(X_grid,regressor.predict(X_grid), color = 'blue') # Traditional method
plt.title("Regression Model")
plt.xlabel("X label")
plt.ylabel("Y label")
plt.show()

